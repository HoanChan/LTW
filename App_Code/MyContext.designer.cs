#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Linq;
using System.Data.Linq.Mapping;
using System.Linq;
using System.Linq.Expressions;
using System.Reflection;



[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="NopBaiTapVeNha")]
public partial class MyContextDataContext : System.Data.Linq.DataContext
{
	
	private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
	
  #region Extensibility Method Definitions
  partial void OnCreated();
  partial void InsertBaiNop(BaiNop instance);
  partial void UpdateBaiNop(BaiNop instance);
  partial void DeleteBaiNop(BaiNop instance);
  partial void InsertQuyen_NguoiDung(Quyen_NguoiDung instance);
  partial void UpdateQuyen_NguoiDung(Quyen_NguoiDung instance);
  partial void DeleteQuyen_NguoiDung(Quyen_NguoiDung instance);
  partial void InsertBaiTap(BaiTap instance);
  partial void UpdateBaiTap(BaiTap instance);
  partial void DeleteBaiTap(BaiTap instance);
  partial void InsertLopHoc(LopHoc instance);
  partial void UpdateLopHoc(LopHoc instance);
  partial void DeleteLopHoc(LopHoc instance);
  partial void InsertNguoiDung(NguoiDung instance);
  partial void UpdateNguoiDung(NguoiDung instance);
  partial void DeleteNguoiDung(NguoiDung instance);
  partial void InsertQuyen(Quyen instance);
  partial void UpdateQuyen(Quyen instance);
  partial void DeleteQuyen(Quyen instance);
  #endregion
	
	public MyContextDataContext() : 
			base(global::System.Configuration.ConfigurationManager.ConnectionStrings["NopBaiTapVeNhaConnectionString"].ConnectionString, mappingSource)
	{
		OnCreated();
	}
	
	public MyContextDataContext(string connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MyContextDataContext(System.Data.IDbConnection connection) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MyContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public MyContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
			base(connection, mappingSource)
	{
		OnCreated();
	}
	
	public System.Data.Linq.Table<BaiNop> BaiNops
	{
		get
		{
			return this.GetTable<BaiNop>();
		}
	}
	
	public System.Data.Linq.Table<Quyen_NguoiDung> Quyen_NguoiDungs
	{
		get
		{
			return this.GetTable<Quyen_NguoiDung>();
		}
	}
	
	public System.Data.Linq.Table<BaiTap> BaiTaps
	{
		get
		{
			return this.GetTable<BaiTap>();
		}
	}
	
	public System.Data.Linq.Table<LopHoc> LopHocs
	{
		get
		{
			return this.GetTable<LopHoc>();
		}
	}
	
	public System.Data.Linq.Table<NguoiDung> NguoiDungs
	{
		get
		{
			return this.GetTable<NguoiDung>();
		}
	}
	
	public System.Data.Linq.Table<Quyen> Quyens
	{
		get
		{
			return this.GetTable<Quyen>();
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaiNop")]
public partial class BaiNop : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Ma;
	
	private int _MaBaiTap;
	
	private string _Username;
	
	private System.DateTime _GioNop;
	
	private string _FileLuu;
	
	private string _GhiChu;
	
	private EntityRef<BaiTap> _BaiTap;
	
	private EntityRef<NguoiDung> _NguoiDung;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChanging(int value);
    partial void OnMaChanged();
    partial void OnMaBaiTapChanging(int value);
    partial void OnMaBaiTapChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnGioNopChanging(System.DateTime value);
    partial void OnGioNopChanged();
    partial void OnFileLuuChanging(string value);
    partial void OnFileLuuChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
	
	public BaiNop()
	{
		this._BaiTap = default(EntityRef<BaiTap>);
		this._NguoiDung = default(EntityRef<NguoiDung>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Ma
	{
		get
		{
			return this._Ma;
		}
		set
		{
			if ((this._Ma != value))
			{
				this.OnMaChanging(value);
				this.SendPropertyChanging();
				this._Ma = value;
				this.SendPropertyChanged("Ma");
				this.OnMaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaBaiTap", DbType="Int NOT NULL")]
	public int MaBaiTap
	{
		get
		{
			return this._MaBaiTap;
		}
		set
		{
			if ((this._MaBaiTap != value))
			{
				if (this._BaiTap.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaBaiTapChanging(value);
				this.SendPropertyChanging();
				this._MaBaiTap = value;
				this.SendPropertyChanged("MaBaiTap");
				this.OnMaBaiTapChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				if (this._NguoiDung.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioNop", DbType="DateTime NOT NULL")]
	public System.DateTime GioNop
	{
		get
		{
			return this._GioNop;
		}
		set
		{
			if ((this._GioNop != value))
			{
				this.OnGioNopChanging(value);
				this.SendPropertyChanging();
				this._GioNop = value;
				this.SendPropertyChanged("GioNop");
				this.OnGioNopChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FileLuu", DbType="NVarChar(255) NOT NULL", CanBeNull=false)]
	public string FileLuu
	{
		get
		{
			return this._FileLuu;
		}
		set
		{
			if ((this._FileLuu != value))
			{
				this.OnFileLuuChanging(value);
				this.SendPropertyChanging();
				this._FileLuu = value;
				this.SendPropertyChanged("FileLuu");
				this.OnFileLuuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string GhiChu
	{
		get
		{
			return this._GhiChu;
		}
		set
		{
			if ((this._GhiChu != value))
			{
				this.OnGhiChuChanging(value);
				this.SendPropertyChanging();
				this._GhiChu = value;
				this.SendPropertyChanged("GhiChu");
				this.OnGhiChuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiTap_BaiNop", Storage="_BaiTap", ThisKey="MaBaiTap", OtherKey="Ma", IsForeignKey=true)]
	public BaiTap BaiTap
	{
		get
		{
			return this._BaiTap.Entity;
		}
		set
		{
			BaiTap previousValue = this._BaiTap.Entity;
			if (((previousValue != value) 
						|| (this._BaiTap.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._BaiTap.Entity = null;
					previousValue.BaiNops.Remove(this);
				}
				this._BaiTap.Entity = value;
				if ((value != null))
				{
					value.BaiNops.Add(this);
					this._MaBaiTap = value.Ma;
				}
				else
				{
					this._MaBaiTap = default(int);
				}
				this.SendPropertyChanged("BaiTap");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BaiNop", Storage="_NguoiDung", ThisKey="Username", OtherKey="Username", IsForeignKey=true)]
	public NguoiDung NguoiDung
	{
		get
		{
			return this._NguoiDung.Entity;
		}
		set
		{
			NguoiDung previousValue = this._NguoiDung.Entity;
			if (((previousValue != value) 
						|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._NguoiDung.Entity = null;
					previousValue.BaiNops.Remove(this);
				}
				this._NguoiDung.Entity = value;
				if ((value != null))
				{
					value.BaiNops.Add(this);
					this._Username = value.Username;
				}
				else
				{
					this._Username = default(string);
				}
				this.SendPropertyChanged("NguoiDung");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quyen_NguoiDung")]
public partial class Quyen_NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MaQuyen;
	
	private string _Username;
	
	private string _GhiChu;
	
	private EntityRef<NguoiDung> _NguoiDung;
	
	private EntityRef<Quyen> _Quyen;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQuyenChanging(string value);
    partial void OnMaQuyenChanged();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnGhiChuChanging(string value);
    partial void OnGhiChuChanged();
    #endregion
	
	public Quyen_NguoiDung()
	{
		this._NguoiDung = default(EntityRef<NguoiDung>);
		this._Quyen = default(EntityRef<Quyen>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuyen", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaQuyen
	{
		get
		{
			return this._MaQuyen;
		}
		set
		{
			if ((this._MaQuyen != value))
			{
				if (this._Quyen.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaQuyenChanging(value);
				this.SendPropertyChanging();
				this._MaQuyen = value;
				this.SendPropertyChanged("MaQuyen");
				this.OnMaQuyenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				if (this._NguoiDung.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GhiChu", DbType="NVarChar(255)")]
	public string GhiChu
	{
		get
		{
			return this._GhiChu;
		}
		set
		{
			if ((this._GhiChu != value))
			{
				this.OnGhiChuChanging(value);
				this.SendPropertyChanging();
				this._GhiChu = value;
				this.SendPropertyChanged("GhiChu");
				this.OnGhiChuChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_Quyen_NguoiDung", Storage="_NguoiDung", ThisKey="Username", OtherKey="Username", IsForeignKey=true)]
	public NguoiDung NguoiDung
	{
		get
		{
			return this._NguoiDung.Entity;
		}
		set
		{
			NguoiDung previousValue = this._NguoiDung.Entity;
			if (((previousValue != value) 
						|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._NguoiDung.Entity = null;
					previousValue.Quyen_NguoiDungs.Remove(this);
				}
				this._NguoiDung.Entity = value;
				if ((value != null))
				{
					value.Quyen_NguoiDungs.Add(this);
					this._Username = value.Username;
				}
				else
				{
					this._Username = default(string);
				}
				this.SendPropertyChanged("NguoiDung");
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quyen_Quyen_NguoiDung", Storage="_Quyen", ThisKey="MaQuyen", OtherKey="MaQuyen", IsForeignKey=true)]
	public Quyen Quyen
	{
		get
		{
			return this._Quyen.Entity;
		}
		set
		{
			Quyen previousValue = this._Quyen.Entity;
			if (((previousValue != value) 
						|| (this._Quyen.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._Quyen.Entity = null;
					previousValue.Quyen_NguoiDungs.Remove(this);
				}
				this._Quyen.Entity = value;
				if ((value != null))
				{
					value.Quyen_NguoiDungs.Add(this);
					this._MaQuyen = value.MaQuyen;
				}
				else
				{
					this._MaQuyen = default(string);
				}
				this.SendPropertyChanged("Quyen");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BaiTap")]
public partial class BaiTap : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private int _Ma;
	
	private string _MaLop;
	
	private string _Ten;
	
	private string _MoTa;
	
	private System.DateTime _HanNop;
	
	private string _AttachFile;
	
	private EntitySet<BaiNop> _BaiNops;
	
	private EntityRef<LopHoc> _LopHoc;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaChanging(int value);
    partial void OnMaChanged();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    partial void OnHanNopChanging(System.DateTime value);
    partial void OnHanNopChanged();
    partial void OnAttachFileChanging(string value);
    partial void OnAttachFileChanged();
    #endregion
	
	public BaiTap()
	{
		this._BaiNops = new EntitySet<BaiNop>(new Action<BaiNop>(this.attach_BaiNops), new Action<BaiNop>(this.detach_BaiNops));
		this._LopHoc = default(EntityRef<LopHoc>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ma", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
	public int Ma
	{
		get
		{
			return this._Ma;
		}
		set
		{
			if ((this._Ma != value))
			{
				this.OnMaChanging(value);
				this.SendPropertyChanging();
				this._Ma = value;
				this.SendPropertyChanged("Ma");
				this.OnMaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
	public string MaLop
	{
		get
		{
			return this._MaLop;
		}
		set
		{
			if ((this._MaLop != value))
			{
				if (this._LopHoc.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnMaLopChanging(value);
				this.SendPropertyChanging();
				this._MaLop = value;
				this.SendPropertyChanged("MaLop");
				this.OnMaLopChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string Ten
	{
		get
		{
			return this._Ten;
		}
		set
		{
			if ((this._Ten != value))
			{
				this.OnTenChanging(value);
				this.SendPropertyChanging();
				this._Ten = value;
				this.SendPropertyChanged("Ten");
				this.OnTenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NText", UpdateCheck=UpdateCheck.Never)]
	public string MoTa
	{
		get
		{
			return this._MoTa;
		}
		set
		{
			if ((this._MoTa != value))
			{
				this.OnMoTaChanging(value);
				this.SendPropertyChanging();
				this._MoTa = value;
				this.SendPropertyChanged("MoTa");
				this.OnMoTaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HanNop", DbType="DateTime NOT NULL")]
	public System.DateTime HanNop
	{
		get
		{
			return this._HanNop;
		}
		set
		{
			if ((this._HanNop != value))
			{
				this.OnHanNopChanging(value);
				this.SendPropertyChanging();
				this._HanNop = value;
				this.SendPropertyChanged("HanNop");
				this.OnHanNopChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AttachFile", DbType="NVarChar(255)")]
	public string AttachFile
	{
		get
		{
			return this._AttachFile;
		}
		set
		{
			if ((this._AttachFile != value))
			{
				this.OnAttachFileChanging(value);
				this.SendPropertyChanging();
				this._AttachFile = value;
				this.SendPropertyChanged("AttachFile");
				this.OnAttachFileChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BaiTap_BaiNop", Storage="_BaiNops", ThisKey="Ma", OtherKey="MaBaiTap")]
	public EntitySet<BaiNop> BaiNops
	{
		get
		{
			return this._BaiNops;
		}
		set
		{
			this._BaiNops.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_BaiTap", Storage="_LopHoc", ThisKey="MaLop", OtherKey="MaLop", IsForeignKey=true)]
	public LopHoc LopHoc
	{
		get
		{
			return this._LopHoc.Entity;
		}
		set
		{
			LopHoc previousValue = this._LopHoc.Entity;
			if (((previousValue != value) 
						|| (this._LopHoc.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._LopHoc.Entity = null;
					previousValue.BaiTaps.Remove(this);
				}
				this._LopHoc.Entity = value;
				if ((value != null))
				{
					value.BaiTaps.Add(this);
					this._MaLop = value.MaLop;
				}
				else
				{
					this._MaLop = default(string);
				}
				this.SendPropertyChanged("LopHoc");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BaiNops(BaiNop entity)
	{
		this.SendPropertyChanging();
		entity.BaiTap = this;
	}
	
	private void detach_BaiNops(BaiNop entity)
	{
		this.SendPropertyChanging();
		entity.BaiTap = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LopHoc")]
public partial class LopHoc : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MaLop;
	
	private string _TenLop;
	
	private string _GiaoVien;
	
	private string _MoTa;
	
	private EntitySet<BaiTap> _BaiTaps;
	
	private EntityRef<NguoiDung> _NguoiDung;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaLopChanging(string value);
    partial void OnMaLopChanged();
    partial void OnTenLopChanging(string value);
    partial void OnTenLopChanged();
    partial void OnGiaoVienChanging(string value);
    partial void OnGiaoVienChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
	
	public LopHoc()
	{
		this._BaiTaps = new EntitySet<BaiTap>(new Action<BaiTap>(this.attach_BaiTaps), new Action<BaiTap>(this.detach_BaiTaps));
		this._NguoiDung = default(EntityRef<NguoiDung>);
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaLop", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaLop
	{
		get
		{
			return this._MaLop;
		}
		set
		{
			if ((this._MaLop != value))
			{
				this.OnMaLopChanging(value);
				this.SendPropertyChanging();
				this._MaLop = value;
				this.SendPropertyChanged("MaLop");
				this.OnMaLopChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenLop", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string TenLop
	{
		get
		{
			return this._TenLop;
		}
		set
		{
			if ((this._TenLop != value))
			{
				this.OnTenLopChanging(value);
				this.SendPropertyChanging();
				this._TenLop = value;
				this.SendPropertyChanged("TenLop");
				this.OnTenLopChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaoVien", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
	public string GiaoVien
	{
		get
		{
			return this._GiaoVien;
		}
		set
		{
			if ((this._GiaoVien != value))
			{
				if (this._NguoiDung.HasLoadedOrAssignedValue)
				{
					throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
				}
				this.OnGiaoVienChanging(value);
				this.SendPropertyChanging();
				this._GiaoVien = value;
				this.SendPropertyChanged("GiaoVien");
				this.OnGiaoVienChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(255)")]
	public string MoTa
	{
		get
		{
			return this._MoTa;
		}
		set
		{
			if ((this._MoTa != value))
			{
				this.OnMoTaChanging(value);
				this.SendPropertyChanging();
				this._MoTa = value;
				this.SendPropertyChanged("MoTa");
				this.OnMoTaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LopHoc_BaiTap", Storage="_BaiTaps", ThisKey="MaLop", OtherKey="MaLop")]
	public EntitySet<BaiTap> BaiTaps
	{
		get
		{
			return this._BaiTaps;
		}
		set
		{
			this._BaiTaps.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_LopHoc", Storage="_NguoiDung", ThisKey="GiaoVien", OtherKey="Username", IsForeignKey=true)]
	public NguoiDung NguoiDung
	{
		get
		{
			return this._NguoiDung.Entity;
		}
		set
		{
			NguoiDung previousValue = this._NguoiDung.Entity;
			if (((previousValue != value) 
						|| (this._NguoiDung.HasLoadedOrAssignedValue == false)))
			{
				this.SendPropertyChanging();
				if ((previousValue != null))
				{
					this._NguoiDung.Entity = null;
					previousValue.LopHocs.Remove(this);
				}
				this._NguoiDung.Entity = value;
				if ((value != null))
				{
					value.LopHocs.Add(this);
					this._GiaoVien = value.Username;
				}
				else
				{
					this._GiaoVien = default(string);
				}
				this.SendPropertyChanged("NguoiDung");
			}
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BaiTaps(BaiTap entity)
	{
		this.SendPropertyChanging();
		entity.LopHoc = this;
	}
	
	private void detach_BaiTaps(BaiTap entity)
	{
		this.SendPropertyChanging();
		entity.LopHoc = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _Username;
	
	private string _Password;
	
	private string _HoLot;
	
	private string _Ten;
	
	private string _Email;
	
	private System.Nullable<System.DateTime> _NgaySinh;
	
	private System.Nullable<bool> _GioiTinh;
	
	private System.Nullable<bool> _IsLocked;
	
	private System.Nullable<System.DateTime> _LastLoginTime;
	
	private EntitySet<BaiNop> _BaiNops;
	
	private EntitySet<Quyen_NguoiDung> _Quyen_NguoiDungs;
	
	private EntitySet<LopHoc> _LopHocs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUsernameChanging(string value);
    partial void OnUsernameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnHoLotChanging(string value);
    partial void OnHoLotChanged();
    partial void OnTenChanging(string value);
    partial void OnTenChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnNgaySinhChanging(System.Nullable<System.DateTime> value);
    partial void OnNgaySinhChanged();
    partial void OnGioiTinhChanging(System.Nullable<bool> value);
    partial void OnGioiTinhChanged();
    partial void OnIsLockedChanging(System.Nullable<bool> value);
    partial void OnIsLockedChanged();
    partial void OnLastLoginTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnLastLoginTimeChanged();
    #endregion
	
	public NguoiDung()
	{
		this._BaiNops = new EntitySet<BaiNop>(new Action<BaiNop>(this.attach_BaiNops), new Action<BaiNop>(this.detach_BaiNops));
		this._Quyen_NguoiDungs = new EntitySet<Quyen_NguoiDung>(new Action<Quyen_NguoiDung>(this.attach_Quyen_NguoiDungs), new Action<Quyen_NguoiDung>(this.detach_Quyen_NguoiDungs));
		this._LopHocs = new EntitySet<LopHoc>(new Action<LopHoc>(this.attach_LopHocs), new Action<LopHoc>(this.detach_LopHocs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string Username
	{
		get
		{
			return this._Username;
		}
		set
		{
			if ((this._Username != value))
			{
				this.OnUsernameChanging(value);
				this.SendPropertyChanging();
				this._Username = value;
				this.SendPropertyChanged("Username");
				this.OnUsernameChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
	public string Password
	{
		get
		{
			return this._Password;
		}
		set
		{
			if ((this._Password != value))
			{
				this.OnPasswordChanging(value);
				this.SendPropertyChanging();
				this._Password = value;
				this.SendPropertyChanged("Password");
				this.OnPasswordChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoLot", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string HoLot
	{
		get
		{
			return this._HoLot;
		}
		set
		{
			if ((this._HoLot != value))
			{
				this.OnHoLotChanging(value);
				this.SendPropertyChanging();
				this._HoLot = value;
				this.SendPropertyChanged("HoLot");
				this.OnHoLotChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ten", DbType="NVarChar(20) NOT NULL", CanBeNull=false)]
	public string Ten
	{
		get
		{
			return this._Ten;
		}
		set
		{
			if ((this._Ten != value))
			{
				this.OnTenChanging(value);
				this.SendPropertyChanging();
				this._Ten = value;
				this.SendPropertyChanged("Ten");
				this.OnTenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(100)")]
	public string Email
	{
		get
		{
			return this._Email;
		}
		set
		{
			if ((this._Email != value))
			{
				this.OnEmailChanging(value);
				this.SendPropertyChanging();
				this._Email = value;
				this.SendPropertyChanged("Email");
				this.OnEmailChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgaySinh", DbType="DateTime")]
	public System.Nullable<System.DateTime> NgaySinh
	{
		get
		{
			return this._NgaySinh;
		}
		set
		{
			if ((this._NgaySinh != value))
			{
				this.OnNgaySinhChanging(value);
				this.SendPropertyChanging();
				this._NgaySinh = value;
				this.SendPropertyChanged("NgaySinh");
				this.OnNgaySinhChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GioiTinh", DbType="Bit")]
	public System.Nullable<bool> GioiTinh
	{
		get
		{
			return this._GioiTinh;
		}
		set
		{
			if ((this._GioiTinh != value))
			{
				this.OnGioiTinhChanging(value);
				this.SendPropertyChanging();
				this._GioiTinh = value;
				this.SendPropertyChanged("GioiTinh");
				this.OnGioiTinhChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsLocked", DbType="Bit")]
	public System.Nullable<bool> IsLocked
	{
		get
		{
			return this._IsLocked;
		}
		set
		{
			if ((this._IsLocked != value))
			{
				this.OnIsLockedChanging(value);
				this.SendPropertyChanging();
				this._IsLocked = value;
				this.SendPropertyChanged("IsLocked");
				this.OnIsLockedChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastLoginTime", DbType="DateTime")]
	public System.Nullable<System.DateTime> LastLoginTime
	{
		get
		{
			return this._LastLoginTime;
		}
		set
		{
			if ((this._LastLoginTime != value))
			{
				this.OnLastLoginTimeChanging(value);
				this.SendPropertyChanging();
				this._LastLoginTime = value;
				this.SendPropertyChanged("LastLoginTime");
				this.OnLastLoginTimeChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_BaiNop", Storage="_BaiNops", ThisKey="Username", OtherKey="Username")]
	public EntitySet<BaiNop> BaiNops
	{
		get
		{
			return this._BaiNops;
		}
		set
		{
			this._BaiNops.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_Quyen_NguoiDung", Storage="_Quyen_NguoiDungs", ThisKey="Username", OtherKey="Username")]
	public EntitySet<Quyen_NguoiDung> Quyen_NguoiDungs
	{
		get
		{
			return this._Quyen_NguoiDungs;
		}
		set
		{
			this._Quyen_NguoiDungs.Assign(value);
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NguoiDung_LopHoc", Storage="_LopHocs", ThisKey="Username", OtherKey="GiaoVien")]
	public EntitySet<LopHoc> LopHocs
	{
		get
		{
			return this._LopHocs;
		}
		set
		{
			this._LopHocs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_BaiNops(BaiNop entity)
	{
		this.SendPropertyChanging();
		entity.NguoiDung = this;
	}
	
	private void detach_BaiNops(BaiNop entity)
	{
		this.SendPropertyChanging();
		entity.NguoiDung = null;
	}
	
	private void attach_Quyen_NguoiDungs(Quyen_NguoiDung entity)
	{
		this.SendPropertyChanging();
		entity.NguoiDung = this;
	}
	
	private void detach_Quyen_NguoiDungs(Quyen_NguoiDung entity)
	{
		this.SendPropertyChanging();
		entity.NguoiDung = null;
	}
	
	private void attach_LopHocs(LopHoc entity)
	{
		this.SendPropertyChanging();
		entity.NguoiDung = this;
	}
	
	private void detach_LopHocs(LopHoc entity)
	{
		this.SendPropertyChanging();
		entity.NguoiDung = null;
	}
}

[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Quyen")]
public partial class Quyen : INotifyPropertyChanging, INotifyPropertyChanged
{
	
	private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
	
	private string _MaQuyen;
	
	private string _TenQuyen;
	
	private string _MoTa;
	
	private EntitySet<Quyen_NguoiDung> _Quyen_NguoiDungs;
	
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQuyenChanging(string value);
    partial void OnMaQuyenChanged();
    partial void OnTenQuyenChanging(string value);
    partial void OnTenQuyenChanged();
    partial void OnMoTaChanging(string value);
    partial void OnMoTaChanged();
    #endregion
	
	public Quyen()
	{
		this._Quyen_NguoiDungs = new EntitySet<Quyen_NguoiDung>(new Action<Quyen_NguoiDung>(this.attach_Quyen_NguoiDungs), new Action<Quyen_NguoiDung>(this.detach_Quyen_NguoiDungs));
		OnCreated();
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuyen", DbType="VarChar(20) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
	public string MaQuyen
	{
		get
		{
			return this._MaQuyen;
		}
		set
		{
			if ((this._MaQuyen != value))
			{
				this.OnMaQuyenChanging(value);
				this.SendPropertyChanging();
				this._MaQuyen = value;
				this.SendPropertyChanged("MaQuyen");
				this.OnMaQuyenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQuyen", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
	public string TenQuyen
	{
		get
		{
			return this._TenQuyen;
		}
		set
		{
			if ((this._TenQuyen != value))
			{
				this.OnTenQuyenChanging(value);
				this.SendPropertyChanging();
				this._TenQuyen = value;
				this.SendPropertyChanged("TenQuyen");
				this.OnTenQuyenChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTa", DbType="NVarChar(255)")]
	public string MoTa
	{
		get
		{
			return this._MoTa;
		}
		set
		{
			if ((this._MoTa != value))
			{
				this.OnMoTaChanging(value);
				this.SendPropertyChanging();
				this._MoTa = value;
				this.SendPropertyChanged("MoTa");
				this.OnMoTaChanged();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Quyen_Quyen_NguoiDung", Storage="_Quyen_NguoiDungs", ThisKey="MaQuyen", OtherKey="MaQuyen")]
	public EntitySet<Quyen_NguoiDung> Quyen_NguoiDungs
	{
		get
		{
			return this._Quyen_NguoiDungs;
		}
		set
		{
			this._Quyen_NguoiDungs.Assign(value);
		}
	}
	
	public event PropertyChangingEventHandler PropertyChanging;
	
	public event PropertyChangedEventHandler PropertyChanged;
	
	protected virtual void SendPropertyChanging()
	{
		if ((this.PropertyChanging != null))
		{
			this.PropertyChanging(this, emptyChangingEventArgs);
		}
	}
	
	protected virtual void SendPropertyChanged(String propertyName)
	{
		if ((this.PropertyChanged != null))
		{
			this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
		}
	}
	
	private void attach_Quyen_NguoiDungs(Quyen_NguoiDung entity)
	{
		this.SendPropertyChanging();
		entity.Quyen = this;
	}
	
	private void detach_Quyen_NguoiDungs(Quyen_NguoiDung entity)
	{
		this.SendPropertyChanging();
		entity.Quyen = null;
	}
}
#pragma warning restore 1591
